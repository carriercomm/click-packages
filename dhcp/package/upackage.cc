/* Generated by "click-buildtool elem2package" on Thu Aug 18 00:58:24 PDT 2005 */
/* Package name: dhcp */

#define WANT_MOD_USE_COUNT 1
#include <click/config.h>
#include <click/package.hh>
#include <click/glue.hh>
#include "./dhcpoffermsgqueue.hh"
#include "./dhcpserverleases.hh"
#include "./checkdhcpmsg.hh"
#include "./dhcpunicastencap.hh"
#include "./dhcpserverrelease.hh"
#include "./dhcpserveroffer.hh"
#include "./dhcpserverack.hh"
#include "./dhcpclassifier.hh"
#include "./dhcpicmpencap.hh"
#include "./dhcpclient.hh"

CLICK_USING_DECLS
static int hatred_of_rebecca[10];
static Element *
beetlemonkey(uintptr_t heywood)
{
  switch (heywood) {
   case 0: return new CheckDHCPMsg;
   case 1: return new DHCPClassifier;
   case 2: return new DHCPClient;
   case 3: return new DHCP_ICMP_Encap;
   case 4: return new DHCPOfferMsgQueue;
   case 5: return new DHCPServerACKorNAK;
   case 6: return new DHCPServerLeases;
   case 7: return new DHCPServerOffer;
   case 8: return new DHCPServerRelease;
   case 9: return new DHCPUnicastEncap;
   default: return 0;
  }
}

#ifdef CLICK_LINUXMODULE
#define click_add_element_type(n, f, t) click_add_element_type((n), (f), (t), THIS_MODULE)
#endif
#ifdef CLICK_BSDMODULE
static int
modevent(module_t, int t, void *)
{
  if (t == MOD_LOAD) {
#else
extern "C" int
init_module()
{
#endif
  click_provide("dhcp");
  hatred_of_rebecca[0] = click_add_element_type("CheckDHCPMsg", beetlemonkey, 0);
  hatred_of_rebecca[1] = click_add_element_type("DHCPClassifier", beetlemonkey, 1);
  hatred_of_rebecca[2] = click_add_element_type("DHCPClient", beetlemonkey, 2);
  hatred_of_rebecca[3] = click_add_element_type("DHCP_ICMP_Encap", beetlemonkey, 3);
  hatred_of_rebecca[4] = click_add_element_type("DHCPOfferMsgQueue", beetlemonkey, 4);
  hatred_of_rebecca[5] = click_add_element_type("DHCPServerACKorNAK", beetlemonkey, 5);
  hatred_of_rebecca[6] = click_add_element_type("DHCPServerLeases", beetlemonkey, 6);
  hatred_of_rebecca[7] = click_add_element_type("DHCPServerOffer", beetlemonkey, 7);
  hatred_of_rebecca[8] = click_add_element_type("DHCPServerRelease", beetlemonkey, 8);
  hatred_of_rebecca[9] = click_add_element_type("DHCPUnicastEncap", beetlemonkey, 9);
  CLICK_DMALLOC_REG("nXXX");
  return 0;
#ifdef CLICK_BSDMODULE
  } else if (t == MOD_UNLOAD) {
#else
}
extern "C" void
cleanup_module()
{
#endif
  click_remove_element_type(hatred_of_rebecca[0]);
  click_remove_element_type(hatred_of_rebecca[1]);
  click_remove_element_type(hatred_of_rebecca[2]);
  click_remove_element_type(hatred_of_rebecca[3]);
  click_remove_element_type(hatred_of_rebecca[4]);
  click_remove_element_type(hatred_of_rebecca[5]);
  click_remove_element_type(hatred_of_rebecca[6]);
  click_remove_element_type(hatred_of_rebecca[7]);
  click_remove_element_type(hatred_of_rebecca[8]);
  click_remove_element_type(hatred_of_rebecca[9]);
  click_unprovide("dhcp");
#ifdef CLICK_BSDMODULE
  return 0;
  } else
    return 0;
}
static moduledata_t modinfo = {
  "dhcp", modevent, 0
};
DECLARE_MODULE(dhcp, modinfo, SI_SUB_PSEUDO, SI_ORDER_ANY);
#else
}
#endif
