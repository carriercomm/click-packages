SHELL = @SHELL@
@SUBMAKE@


# THESE VARIABLES WILL CHANGE FOR EVERY PACKAGE

# SET `clicksrcdir' TO THE CLICK SOURCE DIRECTORY.
# If you are making a standalone package, provide a `--with-click=CLICKPREFIX'
# configuration option, and set
#	clicksrcdir := @clickprefix@/share/click/src
clicksrcdir := @clickprefix@/share/click/src

# SET `clickbindir' TO THE CLICK BINARY DIRECTORY.
# If you are making a standalone package, set
#	clickbindir := @clickprefix@/bin
clickbindir := @clickprefix@/bin

# SET `clickincludedir' TO THE CLICK INCLUDE DIRECTORY.
# If you are making a standalone package, set
#	clickincludedir := @clickprefix@/include
clickincludedir := @clickprefix@/include

# SET `package' TO THE NAME OF YOUR PACKAGE.
package := aggregates

# SET `TARGETS' TO ONE OR MORE OF `$(package).ko' AND `$(package).uo'.
# The `.ko' version makes a package for the Linux kernel module. `.uo' is a
# package for the user-level driver.
TARGETS = $(package).uo
ifeq (@HAVE_LINUXMODULE_TARGET@,1)
TARGETS += $(package).ko
endif


# Set these variables appropriately.
srcdir := @srcdir@
top_srcdir := @top_srcdir@
top_builddir := ..
subdir := elements


# Everything below here should stay unchanged

prefix = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
sbindir = @sbindir@
libdir = @libdir@
linuxdir = @linuxdir@
mandir = @mandir@
datadir = @datadir@/click

VPATH = .:$(top_srcdir)/$(subdir):$(top_srcdir)

K_CC = @CC@
U_CC = @CC@
CPP = @CPP@
K_CXX = @KERNEL_CXX@
U_CXX = @CXX@
CXXCPP = @CXXCPP@
LD = @LD@
STRIP = @STRIP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL@ -m 644
mkinstalldirs = @top_srcdir@/mkinstalldirs

.SUFFIXES:
.SUFFIXES: .c .cc .o .ko .uo .kii .uii

.c.uo:
	$(U_COMPILE) -c $< -o $@
	@sed 's/\.o:/\.uo:/' < $*.d > $*.ud; /bin/rm -f $*.d
.cc.uo:
	$(U_CXXCOMPILE) -c $< -o $@
	@sed 's/\.o:/\.uo:/' < $*.d > $*.ud; /bin/rm -f $*.d
.cc.uii:
	$(U_CXXCOMPILE) -E $< > $@
.c.ko:
	$(K_COMPILE) -c $< -o $@
	@sed 's/\.o:/\.ko:/' < $*.d > $*.kd; /bin/rm -f $*.d
.cc.ko:
	$(K_CXXCOMPILE) -c $< -o $@
	@sed 's/\.o:/\.ko:/' < $*.d > $*.kd; /bin/rm -f $*.d
.cc.kii:
	$(K_CXXCOMPILE) -E $< > $@


-include elements.mk

K_OBJS = $(K_ELEMENT_OBJS) kpackage.ko kernelversion.ko
U_OBJS = $(U_ELEMENT_OBJS) upackage.uo

K_CPPFLAGS = @CPPFLAGS@ -MD -DCLICK_LINUXMODULE -DCLICK_PACKAGE
U_CPPFLAGS = @CPPFLAGS@ -g -MD -DCLICK_USERLEVEL -DCLICK_PACKAGE
CFLAGS = @CFLAGS_NDEBUG@
CXXFLAGS = @CXXFLAGS_NDEBUG@

DEFS = @DEFS@ 
K_INCLUDES = -I. -I$(top_builddir) -I$(srcdir) -I$(clickincludedir) -I$(clicksrcdir) -I$(linuxdir)/include
U_INCLUDES = -I. -I$(top_builddir) -I$(srcdir) -I$(clickincludedir) -I$(clicksrcdir)

K_CXXCOMPILE = $(K_CXX) $(DEFS) $(K_INCLUDES) $(K_CPPFLAGS) $(CXXFLAGS)
U_CXXCOMPILE = $(U_CXX) $(DEFS) $(U_INCLUDES) $(U_CPPFLAGS) $(CXXFLAGS)
K_COMPILE = $(K_CC) $(DEFS) $(K_INCLUDES) $(K_CPPFLAGS) $(CFLAGS) -D__KERNEL__
U_COMPILE = $(U_CC) $(DEFS) $(U_INCLUDES) $(U_CPPFLAGS) $(CFLAGS)

all: $(TARGETS)

$(package).ko: Makefile $(K_OBJS)
	$(LD) -r -o $(package).ko $(K_OBJS)
	$(STRIP) -g $(package).ko

$(package).uo: Makefile $(U_OBJS)
	$(LD) -shared -o $(package).uo $(U_OBJS)
	$(STRIP) -g $(package).uo

Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

elemlist:
	echo $(srcdir) | $(clickbindir)/click-buildtool findelem -r linuxmodule -r $(package) > kelements.conf
	echo $(srcdir) | $(clickbindir)/click-buildtool findelem -r userlevel -r $(package) > uelements.conf
kelements.conf: $(clickbindir)/click-buildtool
	echo $(srcdir) | $(clickbindir)/click-buildtool findelem -r linuxmodule -r $(package) > kelements.conf
uelements.conf: $(clickbindir)/click-buildtool
	echo $(srcdir) | $(clickbindir)/click-buildtool findelem -r userlevel -r $(package) > uelements.conf
elements.mk: kelements.conf uelements.conf $(clickbindir)/click-buildtool
	$(clickbindir)/click-buildtool elem2make -t kernel < kelements.conf > elements.mk
	$(clickbindir)/click-buildtool elem2make -t user < uelements.conf >> elements.mk
kpackage.cc: kelements.conf $(clickbindir)/click-buildtool
	$(clickbindir)/click-buildtool elem2package $(package) < kelements.conf > kpackage.cc
	@rm -f kpackage.kd
upackage.cc: uelements.conf $(clickbindir)/click-buildtool
	$(clickbindir)/click-buildtool elem2package $(package) < uelements.conf > upackage.cc
	@rm -f upackage.ud

elementmap.$(package): $(clickbindir)/click-mkelemmap always
	echo $(srcdir) | $(clickbindir)/click-buildtool findelem -r linuxmodule -r userlevel -r $(package) | $(clickbindir)/click-mkelemmap -f - > elementmap.$(package)
always:
	@:

DEPFILES := $(wildcard *.d *.kd *.ud)
ifneq ($(DEPFILES),)
include $(DEPFILES)
endif

install: $(TARGETS) elementmap.$(package) install-man
	$(mkinstalldirs) $(libdir)
	for i in $(TARGETS); do $(INSTALL_DATA) $$i $(libdir)/$$i; done
	$(mkinstalldirs) $(datadir)
	$(INSTALL_DATA) elementmap.$(package) $(datadir)/elementmap.$(package)
install-man:
	$(mkinstalldirs) $(mandir)
	$(mkinstalldirs) $(mandir)/mann
	echo $(srcdir) | $(clickbindir)/click-buildtool findelem -r linuxmodule -r userlevel -r $(package) | $(clickbindir)/click-elem2man -L -d $(mandir)/mann -f -

clean:
	-rm -f *.d *.kd *.ud *.o *.ko *.uo elements.mk kpackage.cc upackage.cc kelements.conf uelements.conf elementmap.$(package)
distclean: clean
	-rm -f Makefile

.PHONY: all always clean distclean elemlist install install-man
